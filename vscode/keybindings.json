[
    {
        "key": "ctrl+cmd+r",
        "command": "python.startREPL"
    },
    {
        "key": "ctrl+alt+cmd+j",
        "command": "java.debug.runJavaFile"
    },
    {
        "key": "shift+alt+r",
        "command": "python.execInTerminal-icon"
    },
    {
        "key": "ctrl+alt+cmd+d",
        "command": "java.debug.debugFromProjectView"
    },
    /**
    * Panels
    **/
    {
        /** Toggle Explorer */
        "key": "cmd+k cmd+e",
        "command": "workbench.view.explorer"
    },
    {
        /** Toggle GitHub */
        "key": "cmd+k cmd+g",
        "command": "workbench.view.scm"
    },
    {
        /** Toggle Debug */
        "key": "cmd+k cmd+d",
        "command": "workbench.view.debug"
    },
    {
        /** Toggle Installed Extensions */
        "key": "cmd+k cmd+x",
        "command": "workbench.extensions.action.showInstalledExtensions"
    },
    {
        /** Toggle Sidebar Visibility */
        "key": "cmd+k cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        /** Focus on Editor */
        "key": "cmd+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        /** Toggle Terminal */
        "key": "cmd+k cmd+t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        /** Toggle Activity Bar */
        "key": "cmd+k cmd+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        /** Toggle statusbar */
        "key": "cmd+k cmd+s",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    /**
    * File Explorer
    **/
    {
        "key": "cmd+d",
        "command": "duplicate.execute",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+cmd+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "cmd+k cmd+p",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "shift+cmd+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t cmd+s",
        "command": "workbench.action.createTerminalEditorSide"
    },
    {
        "key": "ctrl+alt+cmd+r",
        "command": "rubyLsp.runTest"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "cmd+k cmd+z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "cmd+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    /**
    * Open Files Navigation
    */
    {
        "key": "cmd+.",
        "command": "workbench.action.showAllEditors",
        "when": "editorTextFocus|| !inputFocus",
    },
    /**
    * Coding - Show Hover
    **/
    {
        "key": "shift-k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus",
    },
    {
        "key": "shift-c",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorTextFocus"
    }
]
